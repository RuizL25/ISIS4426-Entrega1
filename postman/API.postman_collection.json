{
	"info": {
		"_postman_id": "763cb605-a216-45ad-bf13-73c5399e08d0",
		"name": "ANB API v1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20955514",
		"_collection_link": "https://www.postman.com/orange-zodiac-989531/workspace/miso/collection/20955514-763cb605-a216-45ad-bf13-73c5399e08d0?action=share&source=collection_link&creator=20955514"
	},
	"item": [
		{
			"name": "Signup",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"first_name\": \"Test\", \"last_name\": \"User\", \"city\": \"Bogot\\u00e1\", \"country\": \"Colombia\", \"email\": \"singupemail@outlook.com\", \"password1\": \"StrongPass123\", \"password2\": \"StrongPass123\"}"
				},
				"url": {
					"raw": "http://localhost:8080/api/auth/signup",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Store access_token in environment variable\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"access_token\", jsonData.access_token);",
							"});",
							"",
							"pm.test(\"Status response is 200\"), function (){",
							"    pm.response.to.have.status(200);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"singupemail@outlook.com\",\n    \"password\": \"StrongPass123\",\n    \"remeber\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Subir Video",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Store task_id in environment variable\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"task_id\", jsonData.task_id);",
							"});",
							"",
							"pm.test(\"Response have task_id\"), function () {",
							"    pm.response.to.have.jsonBody(\"task_id\");",
							"};"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Mi primer video",
							"type": "text"
						},
						{
							"key": "video_file",
							"type": "file",
							"src": "./assets/t.mp4"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8080/api/videos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"videos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Consultar Job Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"pm.test(\"Response contains the required field 'status'\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('status');",
							"});",
							"",
							"",
							"pm.test(\"Status must be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.status).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Status should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/jobs/{{task_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"jobs",
						"{{task_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Public List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"pm.test(\"Response content type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/public/videos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"public",
						"videos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener Video por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"",
							"pm.test(\"The title must be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.title).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Votes must be a non-negative integer\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.have.property('votes').that.is.a('number').and.is.at.least(0);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/videos/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"videos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Vote (auth)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"pm.test(\"Response body contains 'message' field\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('message');",
							"});",
							"",
							"pm.test(\"Message is 'Voto registrado exitosamente.'\", function () {",
							"    pm.expect(pm.response.json().message).to.equal('Voto registrado exitosamente.');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/public/videos/1/vote",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"public",
						"videos",
						"1",
						"vote"
					]
				}
			},
			"response": []
		},
		{
			"name": "Rankings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has a Content-Type of application/json\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
							"});",
							"",
							"",
							"pm.test(\"Response is an array\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData).to.be.an('array');",
							"});",
							"",
							"",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/public/rankings",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",	
					"path": [
						"api",
						"public",
						"rankings"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un video",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response have a status code of 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/videos/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"videos",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "signup_email",
			"value": "test_signup@example.com"
		},
		{
			"key": "login_email",
			"value": "test_signup@example.com"
		},
		{
			"key": "job_id",
			"value": ""
		}
	]
}
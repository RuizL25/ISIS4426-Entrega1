name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Build and Deploy
    runs-on: self-hosted
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Environment Check
        run: |
          echo "Pre-deployment checks"
          echo "Working Directory: ${{ github.workspace}}"
          docker info
          docker-compose version

      - name: Build Application
        run: |
          echo "Building Application"
          docker-compose build --no-cache
          echo "Build completed"

      - name: Run Health Checks
        run : |
          echo "Running Health Checks"
          docker-compose config -q
          echo "Configuration validated"

      - name: Deploy Application
        run: |
          echo "Starting deployment..."
          docker-compose down --remove-orphans
          docker-compose up -d
          echo "Deployment completed"

      - name: Verify Deployment
        run: |
          echo "Verifying Deployment"
          echo "Waiting for services to stabilize..."
          sleep 30
          docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

      - name: Health Check
        run: |
          echo "Checking Services Health"

          echo "Checking SonarQube..."
          timeout 60 bash -c 'while ! curl -s http://localhost:9000 > /dev/null; do sleep 1; done'
          echo "SonarQube is healthy"

          echo "Checking Backend API..."
          timeout 60 bash -c 'while ! curl -s http://localhost:8080/health > /dev/null; do sleep 1; done'
          echo "Backend API is healthy"

          echo "Checking Redis..."
          timeout 30 bash -c 'docker exec $(docker ps -q -f name=redis) redis-cli ping | grep -q "PONG"'
          echo "Redis is healthy"

          echo "Checking Frontend..."
          timeout 30 bash -c 'while ! curl -s http://localhost:3000 > /dev/null; do sleep 1; done'
          echo "Frontend is healthy"

          echo "All services are healthy"

      - name: Deployment Report
        if: always()
        run: |
          echo "Deployment Status: ${{ job.status }}"
          echo "Timestamp: $(date). Container Status:"
          docker-compose ps


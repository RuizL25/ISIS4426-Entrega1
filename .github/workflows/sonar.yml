name: SonarQube Analysis

on:
  pull_request:
    branches: [ main ]

jobs:
  sonarqube:
    name: SonarQube Scan
    runs-on: self-hosted
    steps:
      - name: Check SonarQube Status
        run: |
          echo "Checking SonarQube availability..."
          timeout 60 bash -c 'while ! curl -s http://localhost:9000 > /dev/null; do sleep 1; done'
          echo "SonarQube is running"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Run Go Tests with Coverage
        working-directory: ./back
        run: |
          go test -coverprofile=coverage.txt -covermode=atomic ./...
          go test -json ./... > test-report.json

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://localhost:9000

      - name: Report Status
        if: always()
        run: |
          echo "Workflow completed"
          echo "Check SonarQube results at http://localhost:9000/dashboard"